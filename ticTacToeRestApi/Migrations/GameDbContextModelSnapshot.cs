// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ticTacToeRestApi.Data;

#nullable disable

namespace ticTacToeRestApi.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ticTacToeRestApi.Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BoardSize")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentTurn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PlayerOId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerXId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WinLength")
                        .HasColumnType("integer");

                    b.Property<Guid?>("WinnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlayerOId");

                    b.HasIndex("PlayerXId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ticTacToeRestApi.Data.Entities.Move", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Column")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateTimeOfMove")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Row")
                        .HasColumnType("integer");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("GameId", "Row", "Column")
                        .IsUnique();

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("ticTacToeRestApi.Data.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ticTacToeRestApi.Data.Entities.Game", b =>
                {
                    b.HasOne("ticTacToeRestApi.Data.Entities.Player", "PlayerO")
                        .WithMany("GamesAsO")
                        .HasForeignKey("PlayerOId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ticTacToeRestApi.Data.Entities.Player", "PlayerX")
                        .WithMany("GamesAsX")
                        .HasForeignKey("PlayerXId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ticTacToeRestApi.Data.Entities.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PlayerO");

                    b.Navigation("PlayerX");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("ticTacToeRestApi.Data.Entities.Move", b =>
                {
                    b.HasOne("ticTacToeRestApi.Data.Entities.Game", "Game")
                        .WithMany("Moves")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ticTacToeRestApi.Data.Entities.Player", "Player")
                        .WithMany("Moves")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ticTacToeRestApi.Data.Entities.Game", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("ticTacToeRestApi.Data.Entities.Player", b =>
                {
                    b.Navigation("GamesAsO");

                    b.Navigation("GamesAsX");

                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
